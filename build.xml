<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="zf2-acassets">

    <property name="src.dir" value="src" />
    <property name="test.dir" value="${application.startdir}/test" />
    <property name="vendor.dir" value="vendor" />

    <property name="build.out.dir" value="data/build" />
    <property name="phpdox.out.dir" value="${build.out.dir}/phpdox/bin" />
    <property name="phpunit.out.dir" value="${build.out.dir}/phpunit" />
    <property name="phpcpd.out.dir" value="${build.out.dir}/phpcpd" />
    <property name="pdepend.out.dir" value="${build.out.dir}/pdepend" />
    <property name="phpcs.out.dir" value="${build.out.dir}/phpcs" />
    <property name="phpmd.out.dir" value="${build.out.dir}/phpmd" />
    <property name="phploc.out.dir" value="${build.out.dir}/phploc" />

    <target name="build"
            depends="basic, docs"
            description="Main building target" />

    <target name="basic"
            depends="clean, install-dependencies, generate-autoload, install-dev-dependencies, test, metrics"
            description="Basic build operations" />

    <target name="clean"
            description="Cleans-up workspace before building">

        <delete dir="${build.out.dir}" />
        <mkdir dir="${build.out.dir}" />
        <mkdir dir="${phpunit.out.dir}" />
        <mkdir dir="${phpdox.out.dir}" />
        <mkdir dir="${phpcpd.out.dir}" />
        <mkdir dir="${pdepend.out.dir}" />
        <mkdir dir="${phpcs.out.dir}" />
        <mkdir dir="${phpmd.out.dir}" />
        <mkdir dir="${phploc.out.dir}" />

    </target>

    <target name="install-dependencies"
            description="Installs dependencies by using composer">

        <exec executable="composer" logoutput="true" checkreturn="true">
            <arg value="update" />
            <arg value="--no-dev" />
        </exec>

    </target>
    <target name="install-dev-dependencies"
            description="Installs dependencies by using composer">

        <!-- Development dependencies are executed after autoload classmap generation, to avoid third party classes to be included on it -->
        <exec executable="composer" logoutput="true" checkreturn="true">
            <arg value="update" />
        </exec>

    </target>

    <target name="generate-autoload"
            description="Regenerates autoload_classmapt.php script">

        <exec executable="php" logoutput="true" checkreturn="true">
            <arg value="${vendor.dir}/bin/classmap_generator.php" />
            <arg value="${application.startdir}" />
            <arg value="-i" />
            <arg value="Zend,Composer,AcAssetsTest" />
        </exec>

    </target>

    <target name="test"
            description="Runs PHPUnit test cases">

        <exec executable="${vendor.dir}/bin/phpunit" logoutput="true" checkreturn="true">
            <arg value="-c"/>
            <arg value="${test.dir}/phpunit.xml"/>
            <arg value="--coverage-clover"/>
            <arg value="${application.startdir}/${phpunit.out.dir}/clover.xml"/>
            <arg value="--coverage-html"/>
            <arg value="${application.startdir}/${phpunit.out.dir}/coverage"/>
            <arg value="--log-junit"/>
            <arg value="${application.startdir}/${phpunit.out.dir}/junit.xml"/>
        </exec>

    </target>

    <target name="docs">

        <exec executable="${vendor.dir}/bin/phpdox" logoutput="true" />

    </target>

    <target name="metrics"
            description="Executes metrics tools">

        <echo msg="Executing PHP copy/paste detector..." />
        <exec command="${vendor.dir}/bin/phpcpd --log-pmd=${phpcpd.out.dir}/cpd.xml ${src.dir}"
              logoutput="true" />

        <echo msg="Executing PDepend..." />
        <exec command="${vendor.dir}/bin/pdepend --jdepend-xml=${pdepend.out.dir}/jdepend.xml --summary-xml=${pdepend.out.dir}/jdepend-summary.xml --jdepend-chart=${pdepend.out.dir}/jdepend.svg --overview-pyramid=${pdepend.out.dir}/jdepend-pyramid.svg ${src.dir}"
              logoutput="true" />

        <echo msg="Executing PHP Code Sniffer..." />
        <exec command="${vendor.dir}/bin/phpcs --standard=Zend -p -s --report-full=${phpcs.out.dir}/codesniffer-full.txt --report-summary=${phpcs.out.dir}/codesniffer-summary.txt --report-xml=${phpcs.out.dir}/codesniffer.xml --report-checkstyle=${phpcs.out.dir}/codesniffer-checkstyle.xml --report-gitblame=${phpcs.out.dir}/codesniffer-gitblame.txt ${src.dir}"
              logoutput="true" />

        <echo msg="Executing PHP Mess Detector..." />
        <exec command="${vendor.dir}/bin/phpmd ${src.dir} text codesize,controversial,design,naming,unusedcode --reportfile ${phpmd.out.dir}/phpmd.txt"
              logoutput="true" />

        <echo msg="Executing PHP Loc..." />
        <exec command="${vendor.dir}/bin/phploc --progress --log-xml=${phploc.out.dir}/phploc.xml ${src.dir}"
              logoutput="true" />

    </target>

</project>